# AutoTest
## 介绍
通过 执行流程 记录 来达到自动测试的目的.

## 获取执行流程及参数
通过Mock获取数据来得到 工作关键工作流(方法调用顺序),以及调用参数,形如:

`START:A,B,C;GetInfo:D,E,F;END:X,Y,Z;`

## 提供预定流程和参数

一个正则表达式:NFA:DFA
`START.*(GetInfo).*(Format).*END.*`

用 正则表达式 来描述 允许的流程。不匹配的即为：ASSERT失败.

通过将参数转换为字符串进行匹配,因为类型的事交给编译器,而不归属我们.

## 与传统的ASSERT的区别
本设计是ASSERT的超集:ASSERT用正则可描述为:

`START:1,2;.*END:3;`

```
void Add(int a,int b){
	return a+b;
}

// ASSERT表示:
ASSERT(3==Add(1,2));

// 我们的方法表示:
START:1,2;.*END:3;

```
以上例子只是说我们的设计能够表达出传统测试的语义，但显然它志不在此。

它通过流程控制监控来达到想要的目的。
## 设计理念
丢弃黑科技(汇编等),让代码轻松为程序员所掌握.


